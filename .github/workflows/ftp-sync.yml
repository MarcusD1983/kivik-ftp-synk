name: FTP to Google Drive (daily)

on:
  schedule:
    - cron: "0 5 * * *"
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Install rclone (latest)
        run: |
          curl -fsSL https://rclone.org/install.sh | sudo bash
          rclone version

      - name: Configure rclone remotes
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.config/rclone"

          FTP_PASS_OBS=$(rclone obscure "${{ secrets.FTP_PASS }}")

          cat > "$HOME/.config/rclone/rclone.conf" <<EOF
[ftp]
type = ftp
host = ${{ secrets.FTP_HOST }}
port = ${{ secrets.FTP_PORT }}
user = ${{ secrets.FTP_USER }}
pass = ${FTP_PASS_OBS}
# If your server requires FTPS, uncomment the next line:
# explicit_tls = true

[drive]
type = drive
token = ${{ secrets.GDRIVE_TOKEN }}
EOF

          echo "rclone.conf written"

      - name: Smoke test - fetch one file to /tmp (EPSV default)
        id: smoke_epsv
        continue-on-error: true
        shell: bash
        run: |
          set -euo pipefail
          SRC="ftp:/FromGenero/KivikDataExport/"
          TEST_FILE="Kivik_Appointment.csv"   # change to a guaranteed small file if needed
          rclone copy "$SRC" /tmp \
            --include "$TEST_FILE" \
            --transfers=1 --checkers=1 \
            --timeout 180s --contimeout 20s \
            -vv

      - name: Copy FTP -> Google Drive (EPSV default)
        id: copy_epsv
        if: steps.smoke_epsv.outcome == 'success'
        shell: bash
        run: |
          set -euo pipefail
          SRC="ftp:/FromGenero/KivikDataExport/"
          DST="drive:/Kivik"
          rclone copy "$SRC" "$DST" \
            --progress \
            --transfers=1 --checkers=2 \
            --no-update-modtime \
            --retries 3 --low-level-retries 10 --retries-sleep 10s \
            --timeout 900s --contimeout 30s \
            --stats 30s -vv

      - name: Smoke test - fetch one file to /tmp (PASV, disable EPSV)
        id: smoke_pasv
        if: steps.smoke_epsv.outcome != 'success'
        continue-on-error: true
        shell: bash
        run: |
          set -euo pipefail
          SRC="ftp:/FromGenero/KivikDataExport/"
          TEST_FILE="Kivik_Appointment.csv"
          rclone copy "$SRC" /tmp \
            --include "$TEST_FILE" \
            --transfers=1 --checkers=1 \
            --timeout 180s --contimeout 20s \
            --ftp-disable-epsv \
            -vv

      - name: Copy FTP -> Google Drive (PASV, disable EPSV)
        id: copy_pasv
        if: steps.smoke_epsv.outcome != 'success' && steps.smoke_pasv.outcome == 'success'
        shell: bash
        run: |
          set -euo pipefail
          SRC="ftp:/FromGenero/KivikDataExport/"
          DST="drive:/Kivik"
          rclone copy "$SRC" "$DST" \
            --progress \
            --transfers=1 --checkers=2 \
            --no-update-modtime \
            --ftp-disable-epsv \
            --retries 3 --low-level-retries 10 --retries-sleep 10s \
            --timeout 900s --contimeout 30s \
            --stats 30s -vv

      - name: Fail if both modes failed
        if: steps.copy_epsv.outcome != 'success' && steps.copy_pasv.outcome != 'success'
        run: |
          echo "Both EPSV and PASV modes failed. Check runner logs and FTP firewall/NAT."
          exit 1
